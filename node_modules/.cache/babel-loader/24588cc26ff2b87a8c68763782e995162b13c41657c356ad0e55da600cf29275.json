{"ast":null,"code":"var _jsxFileName = \"/Users/xuyuanshi/Desktop/technine/src/components/DropdownMenu/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DropdownMenu() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('中文');\n  const options = ['中文', 'English'];\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, [dropdownRef]);\n  const handleOptionClick = option => {\n    setIsOpen(false);\n    setSelectedOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdown-menu__toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown-menu__toggle-label\",\n        children: selectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu__icon\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 256 512\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu__list\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `dropdown-menu__item ${option === selectedOption ? 'active' : ''}`,\n        onClick: () => handleOptionClick(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(DropdownMenu, \"lmB6A6mOUoTOghFaCykdYm8guWQ=\");\n_c = DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DropdownMenu","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","options","dropdownRef","useRef","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","handleOptionClick","option","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","viewBox","d","map","_c","$RefreshReg$"],"sources":["/Users/xuyuanshi/Desktop/technine/src/components/DropdownMenu/index.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport \"./index.scss\"\n\nexport default function DropdownMenu() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedOption, setSelectedOption] = useState('中文');\n\n    const options = ['中文', 'English'];\n\n    const dropdownRef = useRef(null);\n\n    useEffect(() => {\n      const handleOutsideClick = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n      document.addEventListener('mousedown', handleOutsideClick);\n  \n      return () => {\n        document.removeEventListener('mousedown', handleOutsideClick);\n      };\n    }, [dropdownRef]);\n\n    const handleOptionClick = (option) => {\n        setIsOpen(false);\n        setSelectedOption(option);\n    }\n\n    return (\n        <div className='dropdown-menu'>\n            <button className=\"dropdown-menu__toggle\" onClick={() => setIsOpen(!isOpen)}>\n                <span className='dropdown-menu__toggle-label'>{selectedOption}</span>\n                <div className='dropdown-menu__icon'>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\">\n                        <path d=\"M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z\" />\n                    </svg>\n                </div>\n            </button>\n            {isOpen && (\n                <ul className=\"dropdown-menu__list\">\n                    {options.map(option => (\n                        <li\n                            key={option}\n                            className={`dropdown-menu__item ${option === selectedOption ? 'active' : ''}`}\n                            onClick={() => handleOptionClick(option)}\n                        >\n                            {option}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMU,OAAO,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;EAEjC,MAAMC,WAAW,GAAGC,MAAM,CAAC,IAAI,CAAC;EAEhCX,SAAS,CAAC,MAAM;IACd,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIH,WAAW,CAACI,OAAO,IAAI,CAACJ,WAAW,CAACI,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtEV,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IACDW,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAE1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,MAAMU,iBAAiB,GAAIC,MAAM,IAAK;IAClCf,SAAS,CAAC,KAAK,CAAC;IAChBE,iBAAiB,CAACa,MAAM,CAAC;EAC7B,CAAC;EAED,oBACInB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BrB,OAAA;MAAQoB,SAAS,EAAC,uBAAuB;MAACE,OAAO,EAAEA,CAAA,KAAMlB,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAkB,QAAA,gBACxErB,OAAA;QAAMoB,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAEhB;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACrE1B,OAAA;QAAKoB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAChCrB,OAAA;UAAK2B,KAAK,EAAC,4BAA4B;UAACC,OAAO,EAAC,aAAa;UAAAP,QAAA,eACzDrB,OAAA;YAAM6B,CAAC,EAAC;UAA8J;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACvK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD,EACRvB,MAAM,iBACHH,OAAA;MAAIoB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAC9Bd,OAAO,CAACuB,GAAG,CAACX,MAAM,iBACfnB,OAAA;QAEIoB,SAAS,EAAG,uBAAsBD,MAAM,KAAKd,cAAc,GAAG,QAAQ,GAAG,EAAG,EAAE;QAC9EiB,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACC,MAAM,CAAE;QAAAE,QAAA,EAExCF;MAAM,GAJFA,MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAET;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd;AAACxB,EAAA,CAnDuBD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}